<?xml version="1.0" encoding="utf-8"?>
<s:Window xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:ns="yourdomain.modules.modularWindow_B.views.components.*"
		  width="260"
		  height="260"
		  close="window_closeHandler(event)"
		  closing="window_closingHandler(event)"
		  creationComplete="creationCompleteHandler(event)"
		  title="{windowTitle}">
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			private var _windowTitle:String;


			[Bindable]
			public function get windowTitle():String
			{
				return _windowTitle;
			}

			public function set windowTitle(value:String):void
			{
				_windowTitle = value;
			}

			//============================================================================
			// add an event listener for the Spark Button - closeWindowButton
			//============================================================================
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				removeEventListener(FlexEvent.CREATION_COMPLETE, creationCompleteHandler);
				closeWindowButton.addEventListener(MouseEvent.CLICK, closeWindowButton_clickHandler);
			}

			//============================================================================
			// remove all event listeners and subcomponents
			//============================================================================
			public function cleanUp():void
			{
				closeWindowButton.removeEventListener(MouseEvent.CLICK, closeWindowButton_clickHandler);
				removeAllElements();
			}

			//============================================================================
			// close the window progranmatically
			//============================================================================
			protected function closeWindowButton_clickHandler(event:MouseEvent):void
			{
				close();
			}

			//============================================================================
			// handler for the Event.CLOSE dispatched after the window has been closed.
			// 
			// hack:
			// dispatch Event.REMOVED_FROM_STAGE to inform Robotlegs that it can remove the
			// Mediator for this View
			// 
			// because when TitleBar's closeButton is clicked the WindowedSystemManager
			// does NOT remove the window, thus no REMOVED_FROM_STAGE is dispatched
			//============================================================================
			protected function window_closeHandler(event:Event):void
			{
				if (stage)
				{
					dispatchEvent(new Event(Event.REMOVED_FROM_STAGE));
				}
			}

			protected function window_closingHandler(event:Event):void
			{
				cleanUp();
			}

			override public function close():void
			{
				super.close();
			}
		]]>
	</fx:Script>
	<s:Button id="closeWindowButton"
			  x="10"
			  y="10"
			  label="close window"
			  chromeColor="#a19eb1"/>
</s:Window>
